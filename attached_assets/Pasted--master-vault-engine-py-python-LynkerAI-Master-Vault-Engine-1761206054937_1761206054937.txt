✨ 请帮我创建一个文件：
📄 文件名：`master_vault_engine.py`

内容如下：
```python
"""
LynkerAI Master Vault Engine v2.0
---------------------------------
功能：
✅ 加密与解密 Master AI 学习知识（AES256）
✅ 写入 Supabase master_vault 表
✅ Superintendent Admin 权限验证系统
"""

import os
import base64
import hashlib
from cryptography.fernet import Fernet
from supabase import create_client, Client
from datetime import datetime

# 连接 Supabase
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")
supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)

# ============ 核心加密机制 ============
def get_cipher():
    """从环境变量读取 MASTER_VAULT_KEY 并生成 AES 密钥"""
    key = os.getenv("MASTER_VAULT_KEY")
    if not key:
        raise ValueError("❌ 未设置 MASTER_VAULT_KEY 环境变量！")
    key_bytes = hashlib.sha256(key.encode()).digest()
    return Fernet(base64.urlsafe_b64encode(key_bytes))

def encrypt_vault_data(content: str) -> str:
    """加密内容"""
    f = get_cipher()
    return f.encrypt(content.encode()).decode()

def decrypt_vault_data(encrypted: str, role: str) -> str:
    """根据角色解密内容"""
    if role != "Superintendent Admin":
        raise PermissionError("🚫 无权访问加密内容：需要 Superintendent Admin 身份。")
    f = get_cipher()
    return f.decrypt(encrypted.encode()).decode()

# ============ Supabase 操作 ============
def insert_vault(title: str, content: str, created_by: str = "Master AI", access_level: str = "restricted"):
    """将加密后的知识写入 master_vault 表"""
    encrypted_content = encrypt_vault_data(content)
    data = {
        "title": title,
        "encrypted_content": encrypted_content,
        "access_level": access_level,
        "created_by": created_by,
        "created_at": datetime.utcnow().isoformat()
    }
    response = supabase.table("master_vault").insert(data).execute()
    print(f"✅ 已写入 Vault：{title} ({created_by})")
    return response

def read_vault(title: str, role: str):
    """根据标题读取并尝试解密 Vault 内容"""
    result = supabase.table("master_vault").select("*").eq("title", title).execute()
    if not result.data:
        print("⚠️ 未找到指定标题内容。")
        return None
    record = result.data[0]
    if role == "Superintendent Admin":
        decrypted = decrypt_vault_data(record["encrypted_content"], role)
        print(f"🔓 解密成功：{title}\n内容：\n{decrypted}")
        return decrypted
    else:
        print("🚫 您没有权限查看此内容。")
        return None

# ============ 测试区 ============
if __name__ == "__main__":
    print("🚀 LynkerAI Master Vault Engine 启动中...")
    try:
        # 示例：Master AI 存入一条学习成果
        insert_vault(
            title="AI命理学习记录#001",
            content="Master AI 在学习刻分算法时发现：23:10~23:12为关键命刻区间。",
            created_by="Master AI"
        )

        # 示例：Superintendent Admin 尝试读取
        read_vault("AI命理学习记录#001", role="Superintendent Admin")

    except Exception as e:
        print("❌ 错误：", e)
```

✨ 附带说明：
1️⃣ 确保 Replit Secrets 中有：
   - SUPABASE_URL  
   - SUPABASE_KEY  
   - MASTER_VAULT_KEY（32位安全字符串）

2️⃣ 如果 Supabase 尚未建立表：
```sql
create table if not exists master_vault (
  id uuid primary key default gen_random_uuid(),
  title text,
  encrypted_content text,
  access_level text default 'restricted',
  created_by text,
  created_at timestamp with time zone default now()
);
```

3️⃣ 执行命令测试：
```bash
python master_vault_engine.py
```
你将看到：
```
🚀 LynkerAI Master Vault Engine 启动中...
✅ 已写入 Vault：AI命理学习记录#001 (Master AI)
🔓 解密成功：AI命理学习记录#001
内容：
Master AI 在学习刻分算法时发现：23:10~23:12为关键命刻区间。
```
