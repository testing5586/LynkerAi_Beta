请为 Lynker Master AI 项目新增模块：
📁 文件：child_ai_insight.py  
功能：让每位用户的子AI（user’s personal AI）在匹配后，独立生成匹配共通点报告，节省主AI推理成本。

──────────────────────────────
🧩 模块目标
──────────────────────────────
1️⃣ 让主AI仅负责匹配 → 子AI自行分析匹配内容  
2️⃣ 采用轻量级模型（text2vec + 规则模板）在本地生成结果  
3️⃣ 输出格式清晰、无需调用大型模型  
4️⃣ 所有报告保存到 Supabase 表 `child_ai_insights`

──────────────────────────────
🧱 数据表结构 (Supabase)
──────────────────────────────
如果表不存在，请自动创建：

CREATE TABLE IF NOT EXISTS child_ai_insights (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id TEXT NOT NULL,
  partner_id TEXT NOT NULL,
  similarity FLOAT,
  shared_tags TEXT[],
  insight_text TEXT,
  created_at TIMESTAMP DEFAULT NOW()
);

──────────────────────────────
🧠 核心逻辑设计
──────────────────────────────
1️⃣ 导入轻量模型：
from text2vec import SentenceModel
model = SentenceModel("shibing624/text2vec-base-chinese")

2️⃣ 定义生成函数：
def generate_child_insight(user_id, partner_id, shared_tags, similarity, supabase_client):
    """为匹配双方生成轻量Insight报告"""
    # 将 shared_tags 转成自然语言描述
    tags_text = "、".join(shared_tags) if shared_tags else "命盘特征相似"
    # 定义模板规则
    if similarity > 0.9:
        relation = "命格高度共振，彼此能深刻理解。"
    elif similarity > 0.8:
        relation = "命盘共鸣强烈，适合合作或友谊。"
    else:
        relation = "命理特征有一定相似性，适合轻交流。"

    # 组合 Insight 报告文本
    insight = f"你与 {partner_id} 的命理相似度为 {similarity:.3f}。\n共同特征：{tags_text}。\n→ {relation}"

    # 保存到 Supabase
    supabase_client.table("child_ai_insights").insert({
        "user_id": user_id,
        "partner_id": partner_id,
        "similarity": similarity,
        "shared_tags": shared_tags,
        "insight_text": insight
    }).execute()

    print(f"💞 子AI Insight 已生成：{user_id} ↔ {partner_id} (相似度 {similarity:.3f})")
    return insight

3️⃣ 与主AI对接：
在 main.py 的 soulmate 匹配阶段（匹配保存后），追加：
from child_ai_insight import generate_child_insight

for match in matches:
    generate_child_insight(user_id, match["match_user_id"], match["shared_tags"], match["similarity"], supabase_client)

──────────────────────────────
🧪 测试命令
──────────────────────────────
执行：
python3 -c "from child_ai_insight import generate_child_insight; from supabase_init import get_supabase; supabase=get_supabase(); print(generate_child_insight('u_demo','u_test1',['设计行业','晚婚','母缘浅'],0.911,supabase))"

预期输出：
💞 子AI Insight 已生成：u_demo ↔ u_test1 (相似度 0.911)
你与 u_test1 的命理相似度为 0.911。
共同特征：设计行业、晚婚、母缘浅。
→ 命格高度共振，彼此能深刻理解。

──────────────────────────────
⚙️ 目标成果
──────────────────────────────
✅ 运行 main.py 时自动触发子AI Insight  
✅ Insight 文本写入 Supabase.child_ai_insights  
✅ 不再占用主AI token  
✅ 为后续“同命社交界面”提供个性化解读数据
