#!/usr/bin/env python3
"""
==========================================================
Supabase 自动设置工具 - 检测并引导创建 child_ai_insights 表
==========================================================
由于Supabase Python客户端不支持直接执行DDL，本脚本将：
1. 检测表是否存在
2. 如果不存在，生成SQL并提供操作指引
3. 提供一键复制的SQL语句
"""

from supabase_init import init_supabase
import os


def check_and_setup_child_ai_insights():
    """检查并设置 child_ai_insights 表"""
    
    print("=" * 70)
    print("🔍 Supabase Cloud 表检测：child_ai_insights")
    print("=" * 70)
    
    # 初始化Supabase
    supabase = init_supabase()
    
    if supabase is None:
        print("\n⚠️ Supabase未连接，无法检测云端表。")
        print("💡 请检查环境变量：SUPABASE_URL 和 SUPABASE_KEY")
        return False
    
    # 检测表是否存在
    try:
        result = supabase.table("child_ai_insights").select("id").limit(1).execute()
        print("\n✅ 表 'child_ai_insights' 已存在于Supabase云端！")
        print(f"📊 当前记录数：{len(result.data) if result.data else 0}")
        return True
    except Exception as e:
        print("\n❌ 表 'child_ai_insights' 不存在于Supabase云端")
        print(f"📋 错误详情：{e}")
        
        # 生成创建SQL
        print("\n" + "=" * 70)
        print("📝 请在 Supabase Dashboard 中执行以下SQL语句创建表：")
        print("=" * 70)
        print("\n🔗 访问：https://supabase.com/dashboard/project/YOUR_PROJECT_ID/editor/sql\n")
        
        sql_script = """-- 创建 child_ai_insights 表
CREATE TABLE IF NOT EXISTS public.child_ai_insights (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id TEXT NOT NULL,
    partner_id TEXT NOT NULL,
    similarity FLOAT,
    shared_tags JSONB,
    insight_text TEXT,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 创建性能优化索引
CREATE INDEX IF NOT EXISTS idx_child_ai_user_id ON public.child_ai_insights (user_id);
CREATE INDEX IF NOT EXISTS idx_child_ai_partner_id ON public.child_ai_insights (partner_id);
CREATE INDEX IF NOT EXISTS idx_child_ai_similarity ON public.child_ai_insights (similarity DESC);

-- 验证表创建成功
SELECT tablename FROM pg_tables WHERE tablename = 'child_ai_insights';
"""
        
        print(sql_script)
        print("=" * 70)
        print("\n📋 操作步骤：")
        print("1️⃣ 复制上面的SQL语句")
        print("2️⃣ 登录 Supabase Dashboard")
        print("3️⃣ 进入 SQL Editor")
        print("4️⃣ 粘贴并执行SQL")
        print("5️⃣ 重新运行本脚本验证")
        print("\n💡 或者将SQL保存到文件：")
        
        # 保存SQL到文件
        sql_file = "./setup_child_ai_insights.sql"
        with open(sql_file, "w", encoding="utf-8") as f:
            f.write(sql_script)
        
        print(f"✅ SQL已保存到：{sql_file}")
        print("=" * 70)
        
        return False


def test_insert_and_read():
    """测试插入和读取功能"""
    print("\n" + "=" * 70)
    print("🧪 测试 Supabase 插入和读取")
    print("=" * 70)
    
    supabase = init_supabase()
    
    if supabase is None:
        print("⚠️ Supabase未连接，跳过测试")
        return
    
    # 测试数据
    test_data = {
        "user_id": "u_test_setup",
        "partner_id": "u_partner_test",
        "similarity": 0.888,
        "shared_tags": {"career_type": "设计行业", "marriage_status": "晚婚"},
        "insight_text": "✨ 测试洞察：你与 u_partner_test 的命理相似度为 0.888。\n📋 共同特征：设计行业、晚婚。\n🔮 → 命盘共鸣强烈，适合合作或友谊。"
    }
    
    try:
        # 插入测试
        print("\n1️⃣ 测试插入...")
        result = supabase.table("child_ai_insights").insert(test_data).execute()
        print(f"✅ 插入成功！记录ID：{result.data[0]['id'] if result.data else 'N/A'}")
        
        # 读取测试
        print("\n2️⃣ 测试读取...")
        result = supabase.table("child_ai_insights").select("*").eq("user_id", "u_test_setup").execute()
        
        if result.data:
            print(f"✅ 读取成功！找到 {len(result.data)} 条记录")
            print(f"\n📊 最新记录：")
            record = result.data[0]
            print(f"   - user_id: {record['user_id']}")
            print(f"   - partner_id: {record['partner_id']}")
            print(f"   - similarity: {record['similarity']}")
            print(f"   - shared_tags: {record['shared_tags']}")
            print(f"   - insight_text: {record['insight_text'][:100]}...")
        else:
            print("⚠️ 未找到记录")
        
        print("\n✅ Supabase 读写测试通过！")
        print("=" * 70)
        
    except Exception as e:
        print(f"\n❌ 测试失败：{e}")
        print("=" * 70)


if __name__ == "__main__":
    print("\n🚀 启动 Supabase child_ai_insights 表自动设置工具\n")
    
    # 检查并设置表
    table_exists = check_and_setup_child_ai_insights()
    
    # 如果表存在，运行测试
    if table_exists:
        test_insert_and_read()
    else:
        print("\n⏸️ 请先在 Supabase Dashboard 创建表，然后重新运行本脚本")
        print("💡 快捷命令：python supabase_auto_setup.py\n")
