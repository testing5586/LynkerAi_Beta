"""
child_ai_feedback.py
-------------------------------------
📘 功能：
让用户对子AI生成的匹配报告 (child_ai_insights) 进行反馈：
👍 喜欢 / 👎 不喜欢
系统会记录反馈并存入 Supabase 表 child_ai_feedback

🪶 兼容结构：
- 若 Supabase 不可用，会自动保存到本地 JSON 备份文件
- 仅依赖 supabase_init.get_supabase()

-------------------------------------
运行方式：
python child_ai_feedback.py
"""

from datetime import datetime
import json, os

try:
    from supabase_init import get_supabase
    supabase = get_supabase()
except Exception as e:
    supabase = None
    print(f"⚠️ Supabase连接失败，本地模式启用：{e}")

# ✅ 表名
TABLE_NAME = "child_ai_feedback"

# ✅ 自动建表 SQL（供你手动复制到 Supabase SQL Editor）
CREATE_TABLE_SQL = """
CREATE TABLE IF NOT EXISTS public.child_ai_feedback (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id TEXT NOT NULL,
    partner_id TEXT NOT NULL,
    liked BOOLEAN DEFAULT FALSE,
    comment TEXT,
    created_at TIMESTAMP DEFAULT NOW()
);

CREATE INDEX IF NOT EXISTS idx_feedback_user ON public.child_ai_feedback (user_id);
CREATE INDEX IF NOT EXISTS idx_feedback_partner ON public.child_ai_feedback (partner_id);
"""

# ✅ 保存反馈（自动写入 Supabase / 本地备份）
def save_feedback(user_id, partner_id, liked, comment=""):
    record = {
        "user_id": user_id,
        "partner_id": partner_id,
        "liked": liked,
        "comment": comment,
        "created_at": datetime.now().isoformat()
    }

    if supabase:
        try:
            supabase.table(TABLE_NAME).insert(record).execute()
            print(f"💾 反馈已保存到 Supabase → {user_id} ↔ {partner_id} [{'👍' if liked else '👎']}")
        except Exception as e:
            print(f"⚠️ Supabase 写入失败，转为本地备份: {e}")
            save_feedback_local(record)
    else:
        save_feedback_local(record)


# ✅ 本地 JSON 备份
def save_feedback_local(record):
    os.makedirs("./data", exist_ok=True)
    backup_file = "./data/child_ai_feedback_backup.jsonl"
    with open(backup_file, "a", encoding="utf-8") as f:
        f.write(json.dumps(record, ensure_ascii=False) + "\n")
    print(f"💾 已本地保存反馈：{record['user_id']} ↔ {record['partner_id']} [{'👍' if record['liked'] else '👎']}")


# ✅ 测试函数（可选）
def test_feedback_flow():
    print("🧪 测试反馈流程...")
    save_feedback("u_demo", "u_test1", True, "感觉这个人命格很像我 👍")
    save_feedback("u_demo", "u_test2", False, "命格太不同，不合适 👎")

if __name__ == "__main__":
    print("🚀 子AI反馈模块启动中...")
    test_feedback_flow()
    print("✅ 测试完成！")
